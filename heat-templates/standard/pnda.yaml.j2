# This flavor specific pnda.yaml 

parameters:
  gatewayFlavor:
    type: string
    description: Flavor for the gateway node
  edgeFlavor:
    type: string
    description: Flavor for the edge node
  cmFlavor:
    type: string
    description: Flavor for the data nodes
  manager1Flavor:
    type: string
    description: Flavor for the manager nodes
  manager2Flavor:
    type: string
    description: Flavor for the manager nodes
  manager3Flavor:
    type: string
    description: Flavor for the manager nodes
  manager4Flavor:
    type: string
    description: Flavor for the manager nodes
  toolsFlavor:
    type: string
    description: Flavor for the tools nodes
  saltmasterFlavor:
    type: string
    description: Flavor for the Saltmaster nodes
  jupyterFlavor:
    type: string
    description: Flavor for the Jupyter nodes
  logserverFlavor:
    type: string
    description: Flavor for the logserver node
  datanodeFlavor:
    type: string
    description: Flavor for the data nodes
  kafkaFlavor:
    type: string
    description: Flavor for the kafka nodes
  opentsdbFlavor:
    type: string
    description: Flavor for the opentsdb node
  zookeeperFlavor:
    type: string
    description: Flavor for the zookeeper nodes
  dataNodes:
    description: Number of DATA nodes
    type: string
  kafkaNodes:
    description: Number of KAFKA nodes
    type: string
  opentsdbNodes:
    description: Number of Opentsdb nodes
    type: number
  zookeeperNodes:
    description: Number of ZOOKEEPER nodes
    type: string
  datanodeVolumeSize:
    type: number
  logVolumeSize:
    type: number

resources:
  pndaCluster:
    type: OS::Pnda::cluster
    depends_on: [ publicNetworkRouterInterface ]
    properties:
      stackName: { get_param: 'OS::stack_name' }
      keyName: { get_param: keyName }
      imageId: { get_param: imageId }
      
      zookeeperNodes: { get_param: zookeeperNodes }
      kafkaNodes: { get_param: kafkaNodes }
      dataNodes: { get_param: dataNodes }
      opentsdbNodes: { get_param: opentsdbNodes }
      
      datanodeVolumeSize : { get_param: datanodeVolumeSize }
      logVolumeSize: { get_param: logVolumeSize }
      
      publicNetworkId: { get_resource: publicNetwork }
      publicSubnetId: { get_resource: publicSubnet }
      externalPublicNetworkId: { get_param: externalPublicNetworkId  }
      pndaSecurityGroupPnda: { get_resource: pndaSecurityGroupPnda }
      
      gatewayFlavor: { get_param: gatewayFlavor }
      edgeFlavor: { get_param: edgeFlavor }
      cmFlavor: { get_param: cmFlavor }
      manager1Flavor: { get_param: manager1Flavor }
      manager2Flavor: { get_param: manager2Flavor }
      manager3Flavor: { get_param: manager3Flavor }
      manager4Flavor: { get_param: manager4Flavor }
      
      jupyterFlavor: { get_param: jupyterFlavor }
      saltmasterFlavor: { get_param: saltmasterFlavor }
      logserverFlavor: { get_param: logserverFlavor }
      toolsFlavor: { get_param: toolsFlavor }
      
      datanodeFlavor: { get_param: datanodeFlavor }
      kafkaFlavor: { get_param: kafkaFlavor }
      opentsdbFlavor: { get_param: opentsdbFlavor }
      zookeeperFlavor: { get_param: zookeeperFlavor }



