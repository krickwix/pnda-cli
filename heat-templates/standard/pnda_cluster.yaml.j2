# pnda_cluster.yaml defines the instances to create for this flavor of PNDA
# The resource_registry.yaml file defines which yaml template to apply to
# each instance type, and these specific yaml files configure the
# instance as required for that type of node.

heat_template_version: 2015-04-30

parameters:
  imageId:
    type: string
  gatewayFlavor:
    type: string
    description: Flavor for the gateway nodes
  edgeFlavor:
    type: string
    description: Flavor for the edge node
  cmFlavor:
    type: string
    description: Flavor for the data nodes
  manager1Flavor:
    type: string
    description: Flavor for the manager nodes
  manager2Flavor:
    type: string
    description: Flavor for the manager nodes
  manager3Flavor:
    type: string
    description: Flavor for the manager nodes
  manager4Flavor:
    type: string
    description: Flavor for the manager nodes
  toolsFlavor:
    type: string
    description: Flavor for the tools nodes
  saltmasterFlavor:
    type: string
    description: Flavor for the Saltmaster nodes
  jupyterFlavor:
    type: string
    description: Flavor for the Jupyter nodes
  logserverFlavor:
    type: string
    description: Flavor for the logserver node
  datanodeFlavor:
    type: string
    description: Flavor for the data nodes
  kafkaFlavor:
    type: string
    description: Flavor for the kafka nodes
  opentsdbFlavor:
    type: string
    description: Flavor for the opentsdb node
  zookeeperFlavor:
    type: string
    description: Flavor for the zookeeper nodes
   
  dataNodes:
    description: Number of DATA nodes
    type: string
  kafkaNodes:
    description: Number of KAFKA nodes
    type: string
  opentsdbNodes:
    description: Number of Opentsdb nodes
    type: number
  zookeeperNodes:
    description: Number of ZOOKEEPER nodes
    type: string
  datanodeVolumeSize:
    type: number
  logVolumeSize:
    type: number
  externalPublicNetworkId:
    type: string
  publicNetworkId:
    type: string
  publicSubnetId:
    type: string
  keyName:
    type: string
  pndaSecurityGroupPnda:
    type: string
  stackName:
    type: string

resources:
  gateway:
    type: OS::Pnda::gateway
    properties:
      flavor: { get_param: gatewayFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      externalPublicNetworkId: { get_param: externalPublicNetworkId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-gateway'
          params:
            '%stackname%': { get_param: stackName  }

  edge:
    type: OS::Pnda::edge
    properties:
      flavor: { get_param: edgeFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-edge'
          params:
            '%stackname%': { get_param: stackName }

  cm:
    type: OS::Pnda::cm
    properties:
      flavor: { get_param: cmFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-cm'
          params:
            '%stackname%': { get_param: stackName }

  manager1:
    type: OS::Pnda::manager1
    properties:
      flavor: { get_param: manager1Flavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-mgr-1'
          params:
            '%stackname%': { get_param: stackName }

  manager2:
    type: OS::Pnda::manager2
    properties:
      flavor: { get_param: manager2Flavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-mgr-2'
          params:
            '%stackname%': { get_param: stackName }

  manager3:
    type: OS::Pnda::manager3
    properties:
      flavor: { get_param: manager3Flavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-mgr-3'
          params:
            '%stackname%': { get_param: stackName }

  manager4:
    type: OS::Pnda::manager4
    properties:
      flavor: { get_param: manager4Flavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-mgr-4'
          params:
            '%stackname%': { get_param: stackName }

  tools:
    type: OS::Pnda::tools
    properties:
      flavor: { get_param: toolsFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      instanceName:
          str_replace:
            template: '%stackname%-tools'
            params:
              '%stackname%': { get_param: stackName }
  logserver:
    type: OS::Pnda::logserver
    properties:
      flavor: { get_param: logserverFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-logserver'
          params:
            '%stackname%': { get_param: stackName }
  saltmaster:
    type: OS::Pnda::saltmaster
    properties:
      flavor: { get_param: saltmasterFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      instanceName:
        str_replace:
          template: '%stackname%-saltmaster'
          params:
            '%stackname%': { get_param: stackName }
  jupyter:
    type: OS::Pnda::jupyter
    properties:
      flavor: { get_param: jupyterFlavor }
      imageId: { get_param: imageId }
      keyName: { get_param: keyName }
      stackName: { get_param: stackName }
      publicNetworkId: { get_param: publicNetworkId }
      publicSubnetId: { get_param: publicSubnetId }
      pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
      logVolumeSize: { get_param: logVolumeSize }
      instanceName:
        str_replace:
          template: '%stackname%-hadoop-jupyter'
          params:
            '%stackname%': { get_param: stackName }

  dn:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: dataNodes }
      resource_def:
        type: OS::Pnda::dn
        properties:
          flavor: { get_param: datanodeFlavor }
          imageId: { get_param: imageId }
          keyName: { get_param: keyName }
          stackName: { get_param: stackName }
          publicNetworkId: { get_param: publicNetworkId }
          publicSubnetId: { get_param: publicSubnetId }
          pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
          datanodeVolumeSize: { get_param: datanodeVolumeSize }
          logVolumeSize: { get_param: logVolumeSize }
          nodeIndex: '%index%'
          instanceName:
            str_replace:
              template: '%stackname%-hadoop-dn-%index%'
              params:
                '%stackname%': { get_param: stackName }

  kafka:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: kafkaNodes }
      resource_def:
        type: OS::Pnda::kafka
        properties:
          flavor: { get_param: kafkaFlavor }
          imageId: { get_param: imageId }
          keyName: { get_param: keyName }
          stackName: { get_param: stackName }
          publicNetworkId: { get_param: publicNetworkId }
          publicSubnetId: { get_param: publicSubnetId }
          pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
          nodeIndex: '%index%'
          logVolumeSize: { get_param: logVolumeSize }
          instanceName:
            str_replace:
              template: '%stackname%-kafka-%index%'
              params:
                '%stackname%': { get_param: stackName }
  opentsdb:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: opentsdbNodes }
      resource_def:
        type: OS::Pnda::opentsdb
        properties:
          flavor: { get_param: opentsdbFlavor }
          imageId: { get_param: imageId }
          keyName: { get_param: keyName }
          stackName: { get_param: stackName }
          publicNetworkId: { get_param: publicNetworkId }
          publicSubnetId: { get_param: publicSubnetId }
          pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
          nodeIndex: '%index%'
          logVolumeSize: { get_param: logVolumeSize }
          instanceName:
            str_replace:
              template: '%stackname%-opentsdb-%index%'
              params:
                '%stackname%': { get_param: stackName }

  zookeeper:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: zookeeperNodes }
      resource_def:
        type: OS::Pnda::zookeeper
        properties:
          flavor: { get_param: zookeeperFlavor }
          imageId: { get_param: imageId }
          keyName: { get_param: keyName }
          stackName: { get_param: stackName }
          publicNetworkId: { get_param: publicNetworkId }
          publicSubnetId: { get_param: publicSubnetId }
          pndaSecurityGroupPnda: { get_param: pndaSecurityGroupPnda }
          nodeIndex: '%index%'
          logVolumeSize: { get_param: logVolumeSize }
          instanceName:
            str_replace:
              template: '%stackname%-zookeeper-%index%'
              params:
                '%stackname%': { get_param: stackName }


