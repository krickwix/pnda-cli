# Definition for the kafka instance type
heat_template_version: 2015-04-30

parameters:
  flavor:
    type: "string"
  keyName:
    type: "string"
  publicNetworkId:
    type: "string"
  publicSubnetId:
    type: "string"
  pndaSecurityGroupPnda:
    type: "string"
  imageId:
    type: "string"
  instanceName:
    type: "string"
  nodeIndex:
    type: "number"
  logVolumeSize:
    type: "number"
  stackName:
    type: "string"

resources:
  kafkaPort:
    type: OS::Neutron::Port
    properties:
      network: { get_param: publicNetworkId }
      fixed_ips:
        - subnet_id: { get_param: publicSubnetId }
      security_groups: [{ get_param: pndaSecurityGroupPnda }]

  logVolume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: logVolumeSize }
      description: "Volume for kafka logs"

  logvolume_attachment:
    type: OS::Cinder::VolumeAttachment
    depends_on: [ kafkaServer ]
    properties:
      volume_id: { get_resource: logVolume }
      instance_uuid: { get_resource: kafkaServer }

  kafkaServer:
    type: OS::Nova::Server
    depends_on: [ kafkaPort]
    properties:
      name: { get_param: instanceName }
      image: { get_param: imageId }
      flavor: { get_param: flavor }
      key_name: { get_param: keyName }
      metadata: {'node_type': 'kafka',
                 'pnda_cluster': {get_param: stackName},
                 'node_idx': {get_param: nodeIndex},
                 'Name': {get_param: instanceName}}
      networks:
        - port: { get_resource: kafkaPort }

outputs:
  portResource:
    description: "Heat resource handle for the Neutron port"
    value:
      { get_resource: kafkaPort }
  serverResource:
    description: "Heat resource handle for the Nova compute server"
    value:
      {get_resource: kafkaServer}
  hostsEntry:
    description: >
      "Server's IP address and hostname in the /etc/hosts format"
    value:
      str_replace:
        template: |
          PRIMARYIP PRIMARYHOST
        params:
          PRIMARYIP: {get_attr: [kafkaServer, first_address]}
          PRIMARYHOST: {get_attr: [kafkaServer, name]}
