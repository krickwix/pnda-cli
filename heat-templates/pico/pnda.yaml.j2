parameters:
  mgr1Flavor:
    type: "string"
    description: "Flavor for the manager nodes"
  edgeFlavor:
    type: "string"
    description: "Flavor for the edge node"
  gatewayFlavor:
    type: "string"
    description: "Flavor for the gateway node"
  kafkaFlavor:
    type: "string"
    description: "Flavor for the kafka nodes"
  datanodeFlavor:
    type: "string"
    description: "Flavor for the data nodes"
  zookeeperNodes:
    description: "Number of ZOOKEEPER nodes"
    type: "number"
  kafkaNodes:
    description: "Number of KAFKA nodes"
    type: "number"
  dataNodes:
    description: "Number of DATA nodes"
    type: "number"
  opentsdbNodes:
    description: "Number of Opentsdb nodes"
    type: "number"
  datanodeVolumeSize:
    type: "number"
  logVolumeSize:
    type: "number"

resources:
  pndaCluster:
    type: OS::Pnda::cluster
    depends_on: [ publicNetworkRouterInterface ]
    properties:
      stackName: { get_param: 'OS::stack_name' }
      externalPublicNetworkId: { get_param: externalPublicNetworkId }
      publicNetworkId: { get_resource: publicNetwork }
      publicSubnetId: { get_resource: publicSubnet }
      pndaSecurityGroupPnda: { get_resource: pndaSecurityGroupPnda }
      keyName: { get_param: keyName }
      imageId: { get_param: imageId }
      gatewayFlavor: { get_param: gatewayFlavor }
      kafkaFlavor: { get_param: kafkaFlavor }
      edgeFlavor: { get_param: edgeFlavor }
      datanodeFlavor: { get_param: datanodeFlavor }
      mgr1Flavor: { get_param: mgr1Flavor }
      dataNodes: { get_param: dataNodes }
      kafkaNodes: { get_param: kafkaNodes }
      datanodeVolumeSize : { get_param: datanodeVolumeSize }
      logVolumeSize : { get_param: logVolumeSize }
