# This base pnda.yaml contains the parts of the stack that are common to all flavors
# The <flavor>/pnda.yaml file is merged over the top of this one before creating the stack

heat_template_version: 2015-04-30

parameters:
  pndaRouter:
    type: string
  externalPublicNetworkId:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  publicSubnetCidr:
    type: string
    default: "10.0.0.0/24"
    description: "CIDR specifying the address range for the public subnet"
  whitelistSshAccess:
    type: string
    description: "Whitelist for external access to ssh"
    default: "0.0.0.0/0"
  whitelistKafkaAccess:
    type: string
    default: "0.0.0.0/0"
    description: "Whitelist for external access to kafka"
  deploymentID:
    type: string
    default: ''
    description: |
      "DeploymentID for this deployment. To trigger a scaling, the stack shall be updated using a different value passed as a parameter.
      Otherwise, orchestration steps necessary to properly the scale the clusters will not be executed"
  imageId:
    type: string
    description: "default image for pnda servers"
  keyName:
    description: "Name of an existing KeyPair to enable SSH access to the instances"
    type: string
  nameServers:
    description: "A specified  DNS name servers to be used"
    type: comma_delimited_list

resources:
  publicNetwork:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: '%stackname%_publicNetwork'
          params:
            '%stackname%': { get_param: 'OS::stack_name' }

  publicSubnet:
    type: OS::Neutron::Subnet
    depends_on: publicNetwork
    properties:
      network_id: { get_resource: publicNetwork }
      cidr: { get_param: publicSubnetCidr }
      dns_nameservers: { get_param: nameServers }

  # Attach publicSubnet as an interface to the pnda_router
  publicNetworkRouterInterface:
    type: OS::Neutron::RouterInterface
    depends_on: [ publicSubnet ]
    properties:
      router_id: { get_param: pndaRouter }
      subnet_id: { get_resource: publicSubnet }

  # Create security group for pnda
  pndaSecurityGroupPnda:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Add security group rules for pnda deployment"
      name:
        str_replace:
          template: '%stackname%_securityGroupPnda'
          params:
            '%stackname%': { get_param: 'OS::stack_name' }
      rules:
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: { get_param: whitelistSshAccess }

        - protocol: udp
          port_range_min: 123
          port_range_max: 123
          remote_ip_prefix: { get_param: whitelistSshAccess }

        - protocol: udp
          port_range_min: 53
          port_range_max: 53
          remote_mode: remote_group_id 

        - protocol: icmp
          remote_mode: remote_group_id

        - protocol: tcp
          port_range_min: 1
          port_range_max: 65535
          remote_mode: remote_group_id

        - protocol: tcp
          port_range_min: 9090
          port_range_max: 9100
          remote_ip_prefix: { get_param: whitelistKafkaAccess }

outputs:
  deploymentID:
    value: { get_param: deploymentID }
    description: |
      "Last deploymentID used. To trigger a scaling, the stack shall be updated using a different value passed as a parameter.
      Otherwise, orchestration steps necessary to properly the scale the clusters will not be executed"
